{
	"info": {
		"_postman_id": "2a3fa0d6-7d79-4516-9420-2d563b8b810c",
		"name": "Todoist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a New Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json schema is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content).to.eql(\"Buy Milk\");\r",
							"    pm.expect(jsonData.due.string).to.eql(\"tomorrow at 12:00\");\r",
							"    pm.expect(jsonData.due.datetime).to.contain(\"T18:00:00Z\");\r",
							"    pm.expect(jsonData.priority).to.eql(4);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"taskId\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Task - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Task - Negative Scenario - Invalid Priority",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Unsupported priority value\\n\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Milk\", \"due_datetime\": \"1990-01-12T22:21:30.21Z\", \"due_lang\": \"en\", \"priority\": 5}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Task - Negative Scenario - Empty request body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty content\\n\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Active Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Active Tasks - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Active Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Json schema is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.content).to.eql(\"Buy Milk\");\r",
							"    pm.expect(jsonData.due.string).to.eql(\"tomorrow at 12:00\");\r",
							"    pm.expect(jsonData.due.datetime).to.contain(\"T18:00:00Z\");\r",
							"    pm.expect(jsonData.priority).to.eql(4);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Active Task - Negative Scenario - Wrong Task Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"404 page not found\\n\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/qwerty",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"qwerty"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Active Task - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Active Task - Negative Scenario - Closed Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId') + '/close',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Active Task - Negative Scenario - Deleted Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId'),\r",
							"    method: 'DELETE',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token'),\r",
							"        'content-type' : 'application/json'\r",
							"    },\r",
							"    body:{\r",
							"        mode: 'raw',\r",
							"        raw: '{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}'\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.environment.set(\"taskId\", res.json().id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Tea\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Task - Negative Scenario - Deleted Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId'),\r",
							"    method: 'DELETE',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Tea\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Task - Negative Scenario - Wrong Task Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token'),\r",
							"        'content-type' : 'application/json'\r",
							"    },\r",
							"    body:{\r",
							"        mode: 'raw',\r",
							"        raw: '{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}'\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.environment.set(\"taskId\", res.json().id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"content\": \"Buy Tea\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Task - Negative Scenario - Invalid Priority",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Unsupported priority value\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"priority\" : 5}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Task - Negative Scenario - Empty Request Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"At least one of supported fields should be set and non-empty\\n\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId'),\r",
							"    method: 'DELETE',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/close",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"close"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close a Task - Negative Scenario - Deleted Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId'),\r",
							"    method: 'DELETE',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/close",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"close"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close a Task - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token'),\r",
							"        'content-type' : 'application/json'\r",
							"    },\r",
							"    body:{\r",
							"        mode: 'raw',\r",
							"        raw: '{\"content\": \"Buy Milk\", \"due_string\": \"tomorrow at 12:00\", \"due_lang\": \"en\", \"priority\": 4}'\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.environment.set(\"taskId\", res.json().id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/close",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"close"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reopen a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/reopen",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"reopen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reopen a Task - Negative Scenario - Deleted Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api.todoist.com/rest/v1/tasks/' + pm.environment.get('taskId'),\r",
							"    method: 'DELETE',\r",
							"    header: {\r",
							"        'authorization' : 'Bearer ' + pm.environment.get('token')\r",
							"    }\r",
							"}, function (err, res) {\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/reopen",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"reopen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reopen a Task - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}/reopen",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}",
						"reopen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Task - Negative Scenario - No Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is text/plain; charset=utf-8/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Empty token\\n\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.todoist.com/rest/v1/tasks/{{taskId}}",
					"protocol": "https",
					"host": [
						"api",
						"todoist",
						"com"
					],
					"path": [
						"rest",
						"v1",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}